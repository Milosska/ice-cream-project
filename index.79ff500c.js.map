{"mappings":"AAAA,MAAMA,EAAeC,SAASC,iBAAiB,kBACzCC,EAAUF,SAASG,cAAc,qBACjCC,EAAeJ,SAASC,iBAAiB,mBAEzCI,EAAmB,CACvBC,eAAgB,EAChBC,iBACEF,EAAiBC,eAAiBE,OAAOC,QAEzBT,SAAPU,KAAKC,MAAMC,QAAU,kCAG9BZ,SAASa,gBAAgBF,MAAMG,eAAiB,O,EAGlDC,gBACEf,SAASU,KAAKC,MAAMC,QAAU,GAC9BJ,OAAOQ,OAAO,CAAEC,IAAKZ,EAAiBC,iBACtCN,SAASa,gBAAgBF,MAAMG,eAAiB,E,GAuBpD,SAASI,EAAYC,GACnBA,EAAEC,iBACFf,EAAiBE,iBACjB,MAAMc,EAAUC,KAAKC,aAAa,cACdvB,SAASG,cAC3B,sBAAwBkB,EAAU,MAExBG,UAAUC,IAAI,UAC1BvB,EAAQsB,UAAUC,IAAI,S,CAGxB,SAASC,IACPrB,EAAiBU,gBACjBf,SAASG,cAAc,iBAAiBqB,UAAUG,OAAO,UACzDzB,EAAQsB,UAAUG,OAAO,S,CAjC3B5B,EAAa6B,SAAQC,IACnBA,EAAIC,iBAAiB,QAASZ,EAAY,IAG5Cd,EAAawB,SAAQC,GAAOA,EAAIC,iBAAiB,QAASJ,KAE1D1B,SAAS8B,iBAAiB,WAAWC,IACjB,WAAdA,EAAMC,MACRN,IACA1B,SAASiC,oBAAoB,UAAWf,G,IAI5ChB,EAAQ4B,iBAAiB,SAASX,IAC5BA,EAAEe,SAAWhC,GACfwB,GAAS,ICrCZ,MACC,MAAMS,EAAanC,SAASG,cAAc,sBACpCiC,EAAcpC,SAASG,cAAc,iBACrCkC,EAAerC,SAASG,cAAc,kBAEtCmC,EAAa,KACjB,MAAMC,EAC0C,SAA9CH,EAAYb,aAAa,mBAA+B,EAC1Da,EAAYI,aAAa,iBAAkBD,GAC3CJ,EAAWX,UAAUiB,OAAO,WAK5BC,eAH0BH,EAEtB,mBADA,qBAE6BvC,SAASU,KAAK,EAGjD0B,EAAYN,iBAAiB,QAASQ,GACtCD,EAAaP,iBAAiB,QAASQ,GAGvC9B,OAAOmC,WAAW,sBAAsBb,iBAAiB,UAAUX,IAC5DA,EAAEyB,UACPT,EAAWX,UAAUG,OAAO,WAC5BS,EAAYI,aAAa,iBAAiB,GAC1CE,eAAeG,iBAAiB7C,SAASU,MAAK,GAEjD,EA3BA,GCAc,IAAIoC,OAAO,UAAW,CAGnCC,UAAW,aACXC,MAAM,EAGNC,WAAY,CACVC,GAAI,qBACJC,WAAW,GAIbC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,uBAIVC,UAAW,CACTL,GAAI","sources":["src/js/modal.js","src/js/mobile-menu.js","src/js/slider.js"],"sourcesContent":["const modalButtons = document.querySelectorAll('.js-open-modal');\nconst overlay = document.querySelector('.js-overlay-modal');\nconst closeButtons = document.querySelectorAll('.js-modal-close');\n\nconst scrollController = {\n  scrollPosition: 0,\n  disabledScroll() {\n    scrollController.scrollPosition = window.scrollY; //щоб не підскакувало вверх при закритті модалки\n    // забороняємо скрол\n    document.body.style.cssText = `\n      overflow: hidden;\n    `;\n    document.documentElement.style.scrollBehavior = 'unset';\n  },\n\n  enabledScroll() {\n    document.body.style.cssText = ''; //----Дозволяємо скрол\n    window.scroll({ top: scrollController.scrollPosition });\n    document.documentElement.style.scrollBehavior = '';\n  },\n};\n\nmodalButtons.forEach(btn => {\n  btn.addEventListener('click', onModalOpen);\n});\n\ncloseButtons.forEach(btn => btn.addEventListener('click', hideAll));\n\ndocument.addEventListener('keydown', event => {\n  if (event.key === 'Escape') {\n    hideAll();\n    document.removeEventListener('keydown', onModalOpen);\n  }\n});\n\noverlay.addEventListener('click', e => {\n  if (e.target === overlay) {\n    hideAll();\n  }\n});\n\nfunction onModalOpen(e) {\n  e.preventDefault();\n  scrollController.disabledScroll();\n  const modalId = this.getAttribute('data-modal');\n  const modalWindow = document.querySelector(\n    '.modal[data-modal=\"' + modalId + '\"]'\n  );\n  modalWindow.classList.add('active');\n  overlay.classList.add('active');\n}\n\nfunction hideAll() {\n  scrollController.enabledScroll();\n  document.querySelector('.modal.active').classList.remove('active');\n  overlay.classList.remove('active');\n}\n","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","const swiper = new Swiper('.swiper', {\n  // Optional parameters\n  //   direction: 'vertical',\n  direction: 'horizontal',\n  loop: true,\n\n  // If we need pagination\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n  },\n\n  // Navigation arrows\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n\n  // And if we need scrollbar\n  scrollbar: {\n    el: '.swiper-scrollbar',\n  },\n});\n"],"names":["$8a7e756c566dd1ea$var$modalButtons","document","querySelectorAll","$8a7e756c566dd1ea$var$overlay","querySelector","$8a7e756c566dd1ea$var$closeButtons","$8a7e756c566dd1ea$var$scrollController","scrollPosition","disabledScroll","window","scrollY","body","style","cssText","documentElement","scrollBehavior","enabledScroll","scroll","top","$8a7e756c566dd1ea$var$onModalOpen","e","preventDefault","modalId","this","getAttribute","classList","add","$8a7e756c566dd1ea$var$hideAll","remove","forEach","btn","addEventListener","event","key","removeEventListener","target","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","setAttribute","toggle","bodyScrollLock","matchMedia","matches","enableBodyScroll","Swiper","direction","loop","pagination","el","clickable","navigation","nextEl","prevEl","scrollbar"],"version":3,"file":"index.79ff500c.js.map"}